security:
    encoders :
        App\Entity\Utilisateur:
            algorithm: auto
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true

    hide_user_not_found: false 
    

    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\Utilisateur
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true #not to identificate the user until it needs 
            provider: in_database #ties the firewal tu the user provider
            entry_point: App\Security\LoginFormAuthenticator
            form_login:
                login_path: connexion
                check_path: connexion
            logout: true
                #path: logout
                #target: home
            custom_authenticator: App\Security\LoginFormAuthenticator
            remember_me: 
                secret: '%kernel.secret%'
                #always_remember_me: true
                signature_properties: [password]
            
            
                 
                


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }
